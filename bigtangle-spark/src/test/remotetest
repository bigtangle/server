#export HDFSSERVER=hdfs://10.15.20.85:8020/user/archiv
 
 curl -d 'jsonRequest={"operation":"register", "table":"banknote","format":"csv", "skip":"false","filePathName":"hdfs://10.15.20.85:8020/user/archiv/Poznan_Banknote/BNList_1000191_20151223_112418_1.txt"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
 curl -d 'jsonRequest={"operation":"register", "table":"finance","format":"csv", "skip":"false","filePathName":"hdfs://10.15.20.85:8020/user/archiv/Poland_Finance/Poland_Finance.csv"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

curl -d 'jsonRequest={"operation":"schema", "table":"banknote" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
curl -d 'jsonRequest={"operation":"schema", "table":"finance" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

curl -d 'jsonRequest={"operation":"select", "table":"banknote","columns":"SenRejects,TimeStart"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

curl -d 'jsonRequest={"operation":"filter", "table":"banknote","columns":"Quality", "operator":"contains", "values":"UnFit", "other_filter_columns":"Quality"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

curl -d 'jsonRequest={"operation":"sample", "table":"banknote", "withreplacement":"true", "sample_size":"0.2", "sample_seed":"3" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

curl -d 'jsonRequest={"operation":"register", "table":"BNListMonthMap","format":"csv", "skip":"false","filePathName":"hdfs://10.15.20.85:8020/user/archiv/BNListMonthMap/BNListMonthMap.txt"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
 
curl -d 'jsonRequest={"operation":"join", "tablelist":"BNListMonthMap, banknote", "tableattribute":"*","match_on":"TimeStart"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
 
curl -d 'jsonRequest={"operation":"register", "table":"BNList_1000191_20151223_112418_1","format":"csv", "skip":"false","filePathName":"hdfs://10.15.20.85:8020/user/archiv/Poznan_Banknote/BNList_1000191_20151223_112418_1.txt"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
 
curl -d 'jsonRequest={"operation":"join", "tablelist":" BNList_1000191_20151223_112418_1, finance", "tableattribute":"TimeStart, ECONOMIC_PROPERTY","match_on":"TimeStart, ECONOMIC_PROPERTY "}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

curl -d 'jsonRequest={"operation":"join", "tablelist":" banknote, finance", "tableattribute":"*","match_on":"TimeStart, ECONOMIC_PROPERTY "}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

curl -d 'jsonRequest={"operation":"join", "tablelist":" banknote, finance", "tableattribute":"*","match_on":"TimeStart, YSHORT_TERM_INTEREST_RATE "}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'



  
 curl -d 'jsonRequest={"operation":"register", "table":"healthexpenditure","format":"csv", "skip":"false","filePathName":"hdfs://10.15.20.85:8020/user/archiv/healthexpenditure/healthexpenditure.csv"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
curl -d 'jsonRequest={"operation":"register", "table":"accountrole","format":"parquet", "skip":"false","filePathName":"hdfs://10.15.20.85:8020/user/archiv/accountrole/accountRole.parquet"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
 
curl -d 'jsonRequest={"operation":"schema", "table":"accountrole" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
  
curl -d 'jsonRequest={"operation":"register", "table":"healthexpenditure_parquet","skip":"false", "format":"parquet","filePathName":"hdfs://10.15.20.85:8020/user/archiv/healthexpenditure_parquet/healthexpenditure.parquet"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
curl -d 'jsonRequest={"operation":"register", "table":"healthexpenditure_json", "skip":"false","format":"json","filePathName":"hdfs://10.15.20.85:8020/user/archiv/healthexpenditure_json/healthexpenditure.json"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
curl -d 'jsonRequest={"operation":"schema", "table":"healthexpenditure_parquet" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
curl -d 'jsonRequest={"operation":"schema", "table":"healthexpenditure_json" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'


curl -d 'jsonRequest={"operation":"schema", "table":"banknote" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'


###################  SEARCH QUERY ##############################
 #start_date AFTER > 23.12.2015
 curl -d 'jsonRequest={"operation":"sql", "sqlQuery":"select  *   from  banknote    where    getYearMonthDay(TimeStart)  >= \u002723.12.2015\u0027  LIMIT 5" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
 
 #start_date: BETWEEN > '23.12.2015' and end_date < '24.12.2015'
 curl -d 'jsonRequest={"operation":"sql", "sqlQuery":"select  *   from  banknote    where    getYearMonthDay(TimeStart)  >= \u002723.12.2015\u0027  and getYearMonthDay(TimeStart)  <= \u002724.12.2015\u0027" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
 
 
 #start_date > '23.12.2015' and end_date < '24.12.2015'
 curl -d 'jsonRequest={"operation":"sql", "sqlQuery":"select  *   from  banknote    where    getYearMonthDay(TimeStart)  >= \u002723.12.2015\u0027  and getYearMonthDay(TimeStart)  <= \u002724.12.2015\u0027" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

#Quality and interval start_date and end_date:  QUALITY between time frame
 curl -d 'jsonRequest={"operation":"sql", "sqlQuery":" select count(TimeStart) , Quality, min(TimeStart), max(TimeStart) from  banknote     group by      Quality " }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

#Quality and range start_serial_number and end_serial_number   QUALITY between serial nr range
 curl -d 'jsonRequest={"operation":"sql", "sqlQuery":" select count(1) , Quality, min(SerialNumber), max(SerialNumber) from  banknote     group by      Quality " }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'


#This query shows which serial numbers that occur more than n-times:
 curl -d 'jsonRequest={"operation":"sql", "sqlQuery":" SELECT a.SerialNumber  FROM banknote a  JOIN (SELECT c.SerialNumber  FROM banknote c GROUP BY c.SerialNumber  HAVING COUNT(*) >= 2) b  ON b.SerialNumber = a.SerialNumber " }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

# Count Reject for  SELECT SenRejects FROM nbp_xcirculation_poz WHERE TrRejects = 'Reject'
 curl -d 'jsonRequest={"operation":"sql", "sqlQuery":"  SELECT *  FROM banknote WHERE Quality = \u0027Reject\u0027 " }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
 curl -d 'jsonRequest={"operation":"sql", "sqlQuery":"  SELECT count(*)  FROM banknote   group by  Quality = \u0027Reject\u0027 " }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

###################  SEARCH QUERY ##############################





#curl -d 'jsonRequest={"operation":"register", "table":"banknote_avro","format":"avro", "skip":"false","filePathName":"hdfs://10.15.20.85:8020/tmp/Banknote"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
#curl -d 'jsonRequest={"operation":"sql", "sqlQuery":"  SELECT *  FROM banknote_avro    " }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'




#curl -d 'jsonRequest={"operation":"schema", "table":"banknote_avro" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'


curl -d 'jsonRequest={"operation":"filter", "table":"banknote","columns":"Quality", "operator":"contains,>=", "values":"Fit,12231", "other_filter_columns":"Quality, SerialNumber"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

curl -d 'jsonRequest={"operation":"filter", "table":"banknote","columns":"*", "operator":"contains,contains", "values":"Unfit,1", "other_filter_columns":"Quality, SerialNumber"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
curl -d 'jsonRequest={"operation":"filter", "table":"banknote","columns":"", "operator":"is Equal,>=", "values":"Unfit,1", "other_filter_columns":"Quality, SerialNumber"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
curl -d 'jsonRequest={"operation":"filter", "table":"banknote","columns":"", "operator":"equals", "values":"UNfit", "other_filter_columns":"Quality"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
curl -d 'jsonRequest={"operation":"filter", "table":"banknote","columns":"", "operator":"equals", "values":"UNfit", "other_filter_columns":"Quality"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'


curl -d 'jsonRequest={"operation":"filter", "table":"banknote","columns":"Quality", "operator":"equals", "values":"Unfit",  "other_filter_columns":"Quality" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

curl -d 'jsonRequest={"operation":"filter", "table":"banknote","columns":"Quality", "operator":"Contains", "values":"UnFit",  "other_filter_columns":"Quality" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'


curl -d 'jsonRequest={"operation":"aggregate", "table":"banknote","aggregate_columns":"SerialNumber,TimeStart, SenProperties","aggregate_function":"count,MAX,MEAN",    "groupby":"Quality" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

curl -d 'jsonRequest={"operation":"aggregate", "table":"banknote","aggregate_columns":"Quality,TimeStart, SenProperties","aggregate_function":",MAX,MEAN",    "groupby":"Quality,TimeStart " }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'


#curl -d 'jsonRequest={"operation":"filter", "table":"banknote_avro","columns":"quality, senrejects", "operator":"equals, > ", "values":"Unfit,R_SNSearchlistAlarm  " , "and":"false"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'


#curl -d 'jsonRequest={"operation":"cleansing-missing", "table":"banknote_avro"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

 
#curl -d 'jsonRequest={"operation":"cleansing-replace", "table":"banknote_avro","other_attributes_name":" senrejects, senunfits", "other_attributes_values":"Fit, senunfits" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

#curl -d 'jsonRequest={"operation":"aggregate", "table":"banknote_avro","aggregate_function":"sum", "aggregate_columns":"cycle",   "groupby":"senrejects"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

#curl -d 'jsonRequest={"operation":"aggregate", "table":"banknote_avro","aggregate_function":"mean", "aggregate_columns":"timestart",   "groupby":"cycle"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'


#curl -d 'jsonRequest={"operation":"aggregate", "table":"banknote_avro","aggregate_function":"max", "aggregate_columns":"timestart",   "groupby":"cycle"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

 
# curl -d 'jsonRequest={"operation":"sql", "sqlQuery":"select  *   from  banknote_avro  limit 10 "}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

 


curl -d 'jsonRequest={"filePathName":"hdfs://10.15.20.85:8020/user/bduser/ingress/customer/manual-upload/2017/6/uploaded-data/BNList_1000191_20151223_112418_1.bin","format":"avro","skip":"false","operation":"registerList","table":"banknotelist"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SparkSQLData&context=cui&sync=true'


curl -d 'jsonRequest={"filePathName":"hdfs://10.15.20.85:8020/user/bduser/ingress/customer/manual-upload/2017/6/uploaded-data/BNList_1000191_20151223_112418_1.bin","format":"avro","skip":"false","operation":"registerList","table":"banknotelist"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SparkSQLData&context=mytestcontext&sync=true'


curl -d 'jsonRequest={"filePathName":"hdfs://10.15.20.85:8020/user/bduser/ingress/customer/manual-upload/2017/6/uploaded-data/BNList_1000191_20151223_112418_1.bin","operation":"registerList", "table":"banknotelist","format":"avro", "skip":"false"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'


curl -d 'jsonRequest={"filePathName":"hdfs://10.15.20.85:8020/user/bduser/ingress/customer/manual-upload/2017/6/uploaded-data/BNList_1000196_20170217_080152_1.bin","operation":"registerList", "table":"banknotelist","format":"avro", "skip":"false"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'


curl -d 'jsonRequest={"operation":"registerList", "table":"banknotelist","format":"avro", "skip":"false","filePathName":"hdfs://10.15.20.85:8020/user/testupload/BNList_1000029_20111109_084920_83.bin, hdfs://10.15.20.85:8020/user/testupload/BNList_1000191_20151223_112418_1.bin"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

  curl -d 'jsonRequest={"operation":"sql", "sqlQuery":" select count(timestart) , quality, min(timestart), max(timestart) from  banknotelist     group by      quality " }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

  curl -d 'jsonRequest={"operation":"sql", "sqlQuery":" select count(1) , quality   from  banknotelist     group by      quality " }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
  
 curl -d 'jsonRequest={"operation":"sql", "sqlQuery":" select count(timestart) , quality, min(timestart), max(timestart) from  banknotelist     group by      quality " }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=cui'
 curl -d 'jsonRequest={"operation":"sql", "sqlQuery":" select count(1) , quality , getYearMonthDay(timestart) from  banknotelist    group by      quality, getYearMonthDay(timestart) " }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=cui'

 curl -d 'jsonRequest={"operation":"sql", "sqlQuery":" select count(1) , quality, senrejects from  banknotelist    group by    quality,  senrejects  " }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

 curl -d 'jsonRequest={"operation":"sql", "sqlQuery":" select  *  from  banknotelist    " }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'




curl -d 'jsonRequest={"operation":"schema", "table":"banknotelist" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=cui'


curl -d 'jsonRequest={"operation":"schema", "table":"banknotelist" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=cui'


curl -d 'jsonRequest={"operation":"schema", "table":"banknotelist" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'


curl -d 'jsonRequest={"operation":"register", "table":"banknote","format":"avro", "skip":"false","filePathName":"hdfs://10.15.20.85:8020/user/testupload/BNList_1000029_20111109_084920_83.bin"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

curl -d 'jsonRequest={"operation":"schema", "table":"banknote" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'


 curl -d 'jsonRequest={"operation":"sql", "sqlQuery":" select count(1) , Quality , getYearMonthDayNumber(TimeStart) from  banknote where getYearMonthDayNumber(TimeStart) > 1320826365000   group by      Quality, getYearMonthDayNumber(TimeStart) " }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

 
 
curl -d 'jsonRequest={"operation":"register", "table":"BNList_1000191_20151223_112418_1","format":"avro", "skip":"false","filePathName":"hdfs://10.15.20.85:8020/user/bduser/ingress/customer/manual-upload/2017/6/uploaded-data/BNList_1000191_20151223_112418_1.bin"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

curl -d 'jsonRequest={"operation":"register", "table":"Poland_Labour","format":"csv", "skip":"false","filePathName":"hdfs://10.15.20.85:8020/user/archiv/Poland_Finance/Poland_Finance.csv"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'
curl -d 'jsonRequest={"filePathName":"hdfs://10.15.20.85:8020/user/bduser/ingress/customer/manual-upload/2017/6/uploaded-data/BNList_1000191_20151223_112418_1.bin","tablelist":"BNList_1000191_20151223_112418_1,Poland_Labour","match_on":"TimeStart,ECONOMIC_PROPERTY","type":"innerjoin","tableattribute":"TimeStart,SerialNumber,ECONOMIC_PROPERTY,POLAND_UNEMPLOYMENT_RATE","strategy":"semijoin","operation":"join"}' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&context=mytestcontext&sync=true'


curl -d 'jsonRequest={"operation":"schema", "table":"BNList_1000191_20151223_112418_1" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'



curl -d 'jsonRequest={"operation":"aggregate", "table":"BNList_1000191_20151223_112418_1","aggregate_columns":"TimeStart, SenRejects,","aggregate_column_names":"TimeStart, SenRejects,","aggregate_function":"MAX,MEAN",    "groupby":"Quality" }' 'localhost:8090/jobs?appName=test&classPath=de.gd.analytics.sparkjob.SqlJob&sync=true&context=mytestcontext'

