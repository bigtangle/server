buildscript {
    ext {
        springBootVersion = ver.spring_boot
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
plugins {
    id 'org.sonarqube' version '2.2'
    id 'jacoco'
    id 'com.github.ksoichiro.build.info' version '0.1.5'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'



dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:  ver.spring_boot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version:   ver.spring_boot
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version:  ver.spring_boot
    compile group: 'org.aspectj', name: 'aspectjrt',   version:ver.aspectjrt
    compile group: 'org.aspectj', name: 'aspectjweaver', version:ver.aspectjweaver
   	compile group: 'org.apache.commons', name: 'commons-lang3', version:ver.commons_lang3
 
 	compile group: 'org.apache.kafka', name: 'kafka-streams', version:ver.kafka
 
	compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version:ver.bcprov_jdk15on
	
    compile group: 'commons-io', name: 'commons-io', version:ver.commons_io
     
    compile project(':bignetcoin-core')
            
    /**
     * test dependencies
     */
    testCompile group: 'org.testng', name: 'testng', version: ver.testng
    testCompile group: 'org.mockito', name: 'mockito-all', version:  ver.mockito_all
    testCompile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-avro', version: ver.jackson_dataformat_avro
    testCompile group: 'org.springframework.boot', name:'spring-boot-starter-test', version:ver.spring_boot
    testCompile group: 'junit', name: 'junit',version:ver.junit
    testCompile group: 'org.springframework.boot', name:'spring-boot-starter-test', version:ver.spring_boot
 
}

test {
  //  useTestNG()
    testLogging.showStandardStreams = true
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}


task createDistributable(type: Copy) {
    dependsOn bootRepackage
    def distDir = file('build/dist')
    from('build/libs') {
        include '*.jar'
        rename '.*', 'bignetcoin-server.jar'
        into 'build/libs'
    }
    from('etc/') {
        include 'Dockerfile'
        include 'entrypoint.sh'
    }
    destinationDir distDir
}

task buildDockerImage(dependsOn: createDistributable) {
    group 'docker'
    doLast {
        parent.buildDockerImageProcessing('bignetcoin-server/build/dist', dockerLocalTag, dockerRegistryTag, project.name, project.group, projectName)
    }
}

task pushDockerImage(dependsOn: buildDockerImage) {
    group 'docker'
    doLast {
        parent.buildDockerPush(dockerRegistryTag)
    }
}
