 plugins {
    id 'org.sonarqube' version '2.2.1'
    id 'jacoco'
    id 'application'
    id 'idea'
}


defaultTasks 'clean', 'build'

distributions {
    main {
        contents {
            baseName = "server"
        }
    }
}
 
 
dependencies {

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:  ver.spring_boot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version:   ver.spring_boot
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version:  ver.spring_boot
    compile group: 'org.aspectj', name: 'aspectjrt',   version:ver.aspectjrt
    compile group: 'org.aspectj', name: 'aspectjweaver', version:ver.aspectjweaver
   	compile group: 'org.apache.commons', name: 'commons-lang3', version:ver.commons_lang3
 
 	compile group: 'org.apache.kafka', name: 'kafka-streams', version:ver.kafka
 
	compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version:ver.bcprov_jdk15on
	
    compile group: 'commons-io', name: 'commons-io', version:ver.commons_io
    compile group: 'mysql', name: 'mysql-connector-java', version:ver.mysql_connector_java
    compile project(':bignetcoin-core')
    compile project(':bignetcoin-orchid')      
    /**
     * test dependencies
     */
    testCompile group: 'org.testng', name: 'testng', version: ver.testng
    testCompile group: 'org.mockito', name: 'mockito-all', version:  ver.mockito_all
    testCompile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-avro', version: ver.jackson_dataformat_avro
    testCompile group: 'org.springframework.boot', name:'spring-boot-starter-test', version:ver.spring_boot
    testCompile group: 'junit', name: 'junit',version:ver.junit
    testCompile group: 'org.springframework.boot', name:'spring-boot-starter-test', version:ver.spring_boot
        testCompile group: 'org.easymock', name: 'easymock', version:  ver.easymock
 
}

mainClassName = "net.bigtangle.server.ServerStart"
//applicationDefaultJvmArgs = ["-Dlogging.config=/etc/processor/logback.xml"]
applicationDefaultJvmArgs = ["-Dlog.root.level=WARN", "-Dlog.de.db.level=INFO", "-Xmx2g"]

jar {
    manifest {
        attributes("Main-Class": mainClassName)
    }
}

task createDistributable(type: Copy) {
    def distDir = file('build/dist')
    from('build/distributions') {
        include '*processor*.tar'
        rename '.*', 'processor-all.tar'
    }
    from('etc') {
        include '*'
    }
    destinationDir distDir
}
createDistributable.dependsOn distTar
